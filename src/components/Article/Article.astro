---
import FomattedDate from "@components/Date/Date.astro"
import { Markdown } from "@astropub/md"
import styles from "./Article.module.scss"

const { title, description, date, author, authorImage } = Astro.props
---

<article class={styles.el}>
  {
    title && (
      <header class={styles.header}>
        <h1 class={styles.title}>{title}</h1>
        <h2 class={styles.description}>
          <Markdown.Inline of={description} />
        </h2>
        <p class={styles.meta}>
          <FomattedDate date={date} />
          <i />
          {authorImage && (
            <img class={styles.authorImage} src={authorImage} alt={author} />
          )}
          {author}
        </p>
      </header>
    )
  }
  <slot />
</article>

<script>
  // import { inter } from "@scripts/fontObserver"

  const footnoteLinks = document.querySelectorAll("[data-footnote-ref]")
  const footerFootnotes = document.querySelector("[data-footnotes]")

  // function repositionSidenotes() {
  //   const sidenotes = document.querySelectorAll(".sidenote")

  //   for (let i = 0; i < sidenotes.length; i++) {
  //     var sidenote = sidenotes[i]
  //     console.log(sidenote)

  //     if (false) {
  //       break
  //     }
  //   }
  // }

  footnoteLinks.forEach((link) => {
    const parent = link.closest("p, ul, ol")
    const contentEl = document.querySelector(`${link.getAttribute("href")}`)
    if (!contentEl) {
      return
    }
    const container = document.createElement("div")
    const sidenote = document.createElement("div")
    const label = link.textContent
    const isLeft = link.id.includes("left")
    container.classList.add("sidenote-container")
    sidenote.classList.add("sidenote")
    if (isLeft) {
      sidenote.classList.add("-left")
    }
    sidenote.innerHTML = contentEl.innerHTML
    sidenote.dataset.label = label
    sidenote.querySelector("[data-footnote-backref]").remove()
    parent.parentNode.insertBefore(container, parent)
    container.append(parent)
    container.append(sidenote)
    // link.closest("sup").remove()

    link.addEventListener("mouseenter", () => {
      sidenote.classList.add("-highlighted")
    })

    link.addEventListener("mouseleave", () => {
      sidenote.classList.remove("-highlighted")
    })

    link.addEventListener("click", (e) => {
      e.preventDefault()
    })
  })

  if (footerFootnotes) {
    footerFootnotes.remove()
  }

  // inter.load().then(() => {
  //   repositionSidenotes()
  // })
</script>
